global
    chroot /var/lib/haproxy
    stats socket /etc/letsencrypt/admin.sock mode 660 level admin

    stats timeout 30s
    user haproxy
    group haproxy

    # Default SSL material locations
    crt-base /etc/letsencrypt/live

    lua-load /etc/haproxy/acme-http01-webroot.lua

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:!aNULL;
    #ssl-default-bind-options no-sslv3
    tune.ssl.default-dh-param 4096


defaults   # https://gist.github.com/arunoda/a35f69f8b7a385d06a8d
      maxconn 2000
      log    global
      mode    http
      option  httplog
      option  dontlognull
      timeout connect 5000
      timeout client  50000
      timeout server  50000
      errorfile 400 /etc/haproxy/errors/400.http
      errorfile 403 /etc/haproxy/errors/403.http
      errorfile 408 /etc/haproxy/errors/408.http
      errorfile 500 /etc/haproxy/errors/500.http
      errorfile 502 /etc/haproxy/errors/502.http
      errorfile 503 /etc/haproxy/errors/503.http
      errorfile 504 /etc/haproxy/errors/504.http

frontend http
    bind *:80
    mode http
    #If you don't want to put https, uncomment the line below:
    #use_backend eve if { hdr(host) openenergyprojects.ro or www.openenergyprojects.ro }
    acl url_acme_http01 path_beg /.well-known/acme-challenge/
    http-request use-service lua.acme-http01 if METH_GET url_acme_http01
    redirect scheme https if !url_acme_http01

frontend https
    bind :443 ssl no-tls-tickets crt www.openenergyprojects.ro/haproxy.pem no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11
    mode http

  reqadd X-Forwarded-Proto:\ https
    rspadd Strict-Transport-Security:\ max-age=15768000

    use_backend eve if { hdr(host) openenergyprojects.ro or www.openenergyprojects.ro }

backend eve
    balance leastconn
    cookie JSESSIONID insert nocache

    redirect prefix https://www.openenergyprojects.ro code 301 unless { hdr(host) openenergyprojects.ro }
    option forwardfor
    server nodej1 yourdockerhost:10080 cookie nodej1
    #server node2 yourdockerhost2:80 cookie node2

# http://m12.io/blog/http-2-with-haproxy-and-nginx-guide#configuration
